        -:    0:Source:D:/02_AshrafWorkArea/Applications/C Language/lab_worksheet/week_02/main.c
        -:    0:Graph:D:\02_AshrafWorkArea\Applications\C Language\lab_worksheet\week_02\cmake-build-debug-coverage\CMakeFiles\week_02.dir\main.c.gcno
        -:    0:Data:D:\02_AshrafWorkArea\Applications\C Language\lab_worksheet\week_02\cmake-build-debug-coverage\CMakeFiles\week_02.dir\main.c.gcda
        -:    0:Runs:1
        -:    1:#include <stdio.h>
        -:    2:
        -:    3://question 1
        -:    4://Design and develop a flowchart and algorithm to read a year as an input and find whether it is leap year or not.
        -:    5://Implement a C program for the same and execute for all possible inputs with appropriate messages.
        -:    6://Also consider end of the centuries.
        -:    7://
        -:    8://int main() {
        -:    9://    int year;
        -:   10://    printf("Enter a year:");
        -:   11://    scanf("%d", &year);
        -:   12://    if ((year % 4 == 0) && ((year % 400 == 0) || (year % 100 != 0))) {
        -:   13://        printf("%d is a leap year.", year);
        -:   14://    } else {
        -:   15://        printf("%d is not a leap year.", year);
        -:   16://    }
        -:   17://    return 0;
        -:   18://}
        -:   19:
        -:   20://question 2
        -:   21://Design and develop a flowchart and algorithm to find the square root of a given number N.
        -:   22://Implement a C program for the same and execute for all possible inputs with appropriate messages.
        -:   23://(Note: Dont use library function sqrt(n), Hint: Use Newton-Raphson method to find the square root).
        -:   24://
        -:   25://int main() {
        -:   26://    int num, s, check;
        -:   27://    printf("Enter a number:");
        -:   28://    scanf("%d", &num);
        -:   29://    s = num / 2;
        -:   30://    for (int i = 0; i < num; i++) {
        -:   31://        check = s;
        -:   32://        s = (s + num / s) / 2;
        -:   33://        if (check == s) {
        -:   34://            break;
        -:   35://        }
        -:   36://    }
        -:   37://    printf("The square root of the number %d is %d", num, s);
        -:   38://    return 0;
        -:   39://}
        -:   40:
        -:   41://question 3
        -:   42://Design and develop a flowchart and algorithm to generate a Fibonacci sequence up to a given number N.
        -:   43://A Fibonacci sequence is defined as follows:
        -:   44://The first and second terms in the sequence are 0 and 1.
        -:   45://Subsequent terms are found by adding the preceding two terms in the sequence.
        -:   46://Implement a C program for the developed flowchart/algorithm and execute the same to generate the first N terms of the sequence.
        -:   47://
function main called 1 returned 100% blocks executed 100%
        1:   48:int main() {
        -:   49:    int a, b, c, num;
        1:   50:    a = 0;
        1:   51:    b = 1;
        1:   52:    printf("Enter the number of elements :");
        1:   52-block  0
call    0 returned 1
        1:   53:    scanf("%d", &num);
call    0 returned 1
        1:   54:    printf("The fibonacci series:-\n");
call    0 returned 1
       26:   55:    for (int i = 1; i <= num; i++) {
       26:   55-block  0
branch  0 taken 25
branch  1 taken 1 (fallthrough)
       25:   56:        c = a + b;
       25:   57:        printf("%d+%d=%d", a, b, c);
       25:   57-block  0
call    0 returned 25
       25:   58:        printf("\n");
call    0 returned 25
       25:   59:        a = b;
       25:   60:        b = c;
        -:   61:    }
        1:   62:    return 0;
        1:   62-block  0
        -:   63:}
        -:   64:
        -:   65://question 4
        -:   66://Design and develop a flowchart and algorithm that takes three coefficients (a, b, and c) of a Quadratic equation (ax2+bx+c=0) as input and compute all possible roots.
        -:   67://Implement a C program for the developed flowchart/algorithm and execute the same to output the possible roots for a given set of coefficients with appropriate messages.
        -:   68://
        -:   69:#include<math.h>
        -:   70:
        -:   71://int main() {
        -:   72://    int a, b, c, sq;
        -:   73://    sq = 253;
        -:   74://    printf("Enter the coefficient of x%c:", (char) sq);
        -:   75://    scanf("%d", &a);
        -:   76://    printf("Enter the coefficient of x:");
        -:   77://    scanf("%d", &b);
        -:   78://    printf("Enter the constant:");
        -:   79://    scanf("%d", &c);
        -:   80://    printf("The quadratic equation is %dx%c + %dx + %d = 0", a, (char) sq, b, c);
        -:   81://    printf("\n");
        -:   82://    if (b * b - 4 * a * c >= 0) {
        -:   83://        printf("The first root is: %.2f", (-b + sqrt(b * b - 4 * a * c)) / 2 * a);
        -:   84://        printf("\n");
        -:   85://        printf("The second root is: %.2f", (-b - sqrt(b * b - 4 * a * c)) / 2 * a);
        -:   86://    } else {
        -:   87://        printf("Enter a valid quadratic equation!!!");
        -:   88://    }
        -:   89://    return 0;
        -:   90://}
        -:   91:
        -:   92://   !!!!!!!!!!!!!!!!!!!!!! END OF WEEK-2 !!!!!!!!!!!!!!!!!!!!!!
        -:   93://   !!!!!!!!!!!!!!!!!!!!!!!! THANK YOU !!!!!!!!!!!!!!!!!!!!!!!!
